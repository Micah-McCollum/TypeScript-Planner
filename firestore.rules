rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // Only the authenticated user may read or write to their own account
      allow read, write: if request.auth != null
                         && request.auth.uid == userId;
    }
		
		/* These Collections Tests will only R/W/U if authenticated user attempts */
    
    // Notes
    match /notes/{noteId} {
      allow read, update, delete: if request.auth != null
                                 && resource.data.userId == request.auth.uid;

      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid;
    }
		
		// Finances
    match /finances/{financeId} {
      allow read, update, delete: if request.auth != null
                                 && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid;
    }
		
    // Budgets
    match /budgets/{budgetId} {
      allow read, update, delete: if request.auth != null
                                 && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid;
    }
		// Calendar
    match /calendar/{calendarId} {
      allow read, update, delete: if request.auth != null
                                 && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid;
    
		}
		// Events
	    match /events/{eventId} {
      allow read, update, delete: if request.auth != null
                                 && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid;
		}

    // Notifications
    match /notifications/{id} {
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}

    
